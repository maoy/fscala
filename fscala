#!/bin/sh
##############################################################################
# fscala: a faster way to run scala scripts
# author: Yun Mao (maoy@alumni.upenn.edu)
# The script inherited most of the PATH/CLASSPATH stuff from scala in 
# standard scala distribution
#
##############################################################################
# Copyright 2002-2010, LAMP/EPFL
#
# This is free software; see the distribution for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.
##############################################################################

if [ -z "$1" ] ; then
  exec scala # no argument given, call scala instead
fi

if [ ! -r "$1" ] ; then
  echo "no such file or not readable: $1"
  exit 1
fi

cygwin=false;
case "`uname`" in
    CYGWIN*) cygwin=true ;;
esac

# Finding the root folder for this Scala distribution
SOURCE=`which scala`;
SCRIPT=`basename "$SOURCE"`;
while [ -h "$SOURCE" ]; do
    SCRIPT=`basename "$SOURCE"`;
    LOOKUP=`ls -ld "$SOURCE"`;
    TARGET=`expr "$LOOKUP" : '.*-> \(.*\)$'`;
    if expr "${TARGET:-.}/" : '/.*/$' > /dev/null; then
        SOURCE=${TARGET:-.};
    else
        SOURCE=`dirname "$SOURCE"`/${TARGET:-.};
    fi;
done;

# see #2092
SCALA_HOME=`dirname "$SOURCE"`
SCALA_HOME=`cd "$SCALA_HOME"; pwd -P`
SCALA_HOME=`cd "$SCALA_HOME"/..; pwd`

# Remove spaces from SCALA_HOME on windows
if $cygwin; then
    SCALA_HOME=`cygpath --windows --short-name "$SCALA_HOME"`
    SCALA_HOME=`cygpath --unix "$SCALA_HOME"`
fi

# Constructing the extension classpath
TOOL_CLASSPATH=""
if [ -z "$TOOL_CLASSPATH" ] ; then
    for ext in "$SCALA_HOME"/lib/* ; do
        if [ -z "$TOOL_CLASSPATH" ] ; then
            TOOL_CLASSPATH="$ext"
        else
            TOOL_CLASSPATH="$TOOL_CLASSPATH:$ext"
        fi
    done
fi

if $cygwin; then
    if [ "$OS" = "Windows_NT" ] && cygpath -m .>/dev/null 2>/dev/null ; then
        format=mixed
    else
        format=windows
    fi
    SCALA_HOME=`cygpath --$format "$SCALA_HOME"`
    TOOL_CLASSPATH=`cygpath --path --$format "$TOOL_CLASSPATH"`
fi

# Reminder: substitution ${JAVA_OPTS:=-Xmx256M -Xms16M} DO NOT work on Solaris
[ -n "$JAVA_OPTS" ] || JAVA_OPTS="-Xmx256M -Xms32M"

# break out -D options and add them to JAVA_OPTS as well so they reach the
# underlying JVM in time to do some good.
for i
do
  case "$i" in
    -D*)
      JAVA_OPTS="$JAVA_OPTS $i" ;;
    *)
      ;;
  esac
done 


if [ -z "$JAVACMD" -a -n "$JAVA_HOME" -a -x "$JAVA_HOME/bin/java" ]; then
    JAVACMD="$JAVA_HOME/bin/java"
fi

# new stuff #
SCRIPTNAME=`basename $1 .scala`
# all compiled classes will be put in .$SCRIPTNAME.classes folder
CLASSDIR=`dirname $1`/.$SCRIPTNAME.classes

MAIN_SCALA=$CLASSDIR/$SCRIPTNAME.scala

if [ -e $CLASSDIR/ScriptMain.class ] && [ $CLASSDIR/ScriptMain.class -nt $1 ] ; then
    exec "${JAVACMD:=java}" $JAVA_OPTS -cp "$TOOL_CLASSPATH":$CLASSDIR ScriptMain "$@"
fi

mkdir -p $CLASSDIR/ || exit 1

FIRST_TWO_CHARS="`head -c2 $1`"
if [ "$FIRST_TWO_CHARS" = "#!" ]; then
    printf "object ScriptMain { def main(argv:Array[String]) { val args=argv.tail; new AnyRef { //" > $MAIN_SCALA || exit 1
else
    printf "object ScriptMain { def main(argv:Array[String]) { val args=argv.tail; new AnyRef { " > $MAIN_SCALA || exit 1
fi

cat $1 >> $MAIN_SCALA || exit 1
echo "} } }" >> $MAIN_SCALA || exit 1
"${JAVACMD:=java}" $JAVA_OPTS -cp "$TOOL_CLASSPATH" -Dscala.home="$SCALA_HOME" -Denv.emacs="$EMACS"  scala.tools.nsc.CompileClient -d $CLASSDIR/ $MAIN_SCALA && exec "${JAVACMD:=java}" $JAVA_OPTS -cp "$TOOL_CLASSPATH":$CLASSDIR ScriptMain "$@"

